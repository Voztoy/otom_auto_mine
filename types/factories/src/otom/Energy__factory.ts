/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Energy, EnergyInterface } from "../../../src/otom/Energy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "consume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "operators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "toggleOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transform",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001f61002460201b60201c565b61018e565b600061003461012860201b60201c565b90508060000160089054906101000a900460ff161561007f576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101255767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff60405161011c9190610173565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600067ffffffffffffffff82169050919050565b61016d81610150565b82525050565b60006020820190506101886000830184610164565b92915050565b611eb88061019d6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad57806395d89b411161007157806395d89b41146102d0578063a9059cbb146102ee578063dd62ed3e1461031e578063e30c39781461034e578063f2fde38b1461036c57610121565b806370a0823114610264578063715018a61461029457806379ba50971461029e5780638129fc1c146102a85780638da5cb5b146102b257610121565b8063224b5c72116100f4578063224b5c72146101c257806323b872dd146101de578063313ce5671461020e5780633fe529f01461022c5780635713874d1461024857610121565b806306fdde0314610126578063095ea7b31461014457806313e7c9d81461017457806318160ddd146101a4575b600080fd5b61012e610388565b60405161013b91906117f5565b60405180910390f35b61015e600480360381019061015991906118b0565b610429565b60405161016b919061190b565b60405180910390f35b61018e60048036038101906101899190611926565b61044c565b60405161019b919061190b565b60405180910390f35b6101ac61046c565b6040516101b99190611962565b60405180910390f35b6101dc60048036038101906101d791906118b0565b610484565b005b6101f860048036038101906101f3919061197d565b610524565b604051610205919061190b565b60405180910390f35b610216610553565b60405161022391906119ec565b60405180910390f35b61024660048036038101906102419190611926565b61055c565b005b610262600480360381019061025d91906118b0565b610609565b005b61027e60048036038101906102799190611926565b6106a9565b60405161028b9190611962565b60405180910390f35b61029c610700565b005b6102a6610714565b005b6102b06107a3565b005b6102ba6109b5565b6040516102c79190611a16565b60405180910390f35b6102d86109ed565b6040516102e591906117f5565b60405180910390f35b610308600480360381019061030391906118b0565b610a8e565b604051610315919061190b565b60405180910390f35b61033860048036038101906103339190611a31565b610ab1565b6040516103459190611962565b60405180910390f35b610356610b46565b6040516103639190611a16565b60405180910390f35b61038660048036038101906103819190611926565b610b7e565b005b60606000610394610c3a565b90508060030180546103a590611aa0565b80601f01602080910402602001604051908101604052809291908181526020018280546103d190611aa0565b801561041e5780601f106103f35761010080835404028352916020019161041e565b820191906000526020600020905b81548152906001019060200180831161040157829003601f168201915b505050505091505090565b600080610434610c62565b9050610441818585610c6a565b600191505092915050565b60006020528060005260406000206000915054906101000a900460ff1681565b600080610477610c3a565b9050806002015491505090565b61048c610c7c565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661050e576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105188282610cd3565b610520610d55565b5050565b60008061052f610c62565b905061053c858285610d6e565b610547858585610e02565b60019150509392505050565b60006012905090565b610564610ef6565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610611610c7c565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610693576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61069d8282610f7d565b6106a5610d55565b5050565b6000806106b4610c3a565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b610708610ef6565b6107126000610fff565b565b600061071e610c62565b90508073ffffffffffffffffffffffffffffffffffffffff1661073f610b46565b73ffffffffffffffffffffffffffffffffffffffff161461079757806040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161078e9190611a16565b60405180910390fd5b6107a081610fff565b50565b60006107ad61103f565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156107fb5750825b9050600060018367ffffffffffffffff16148015610830575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561083e575080155b15610875576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156108c55760018560000160086101000a81548160ff0219169083151502179055505b6109396040518060400160405280600681526020017f456e6572677900000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e52470000000000000000000000000000000000000000000000000000000000815250611067565b6109423361107d565b61094a611091565b61095261109b565b83156109ae5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516109a59190611b2a565b60405180910390a15b5050505050565b6000806109c06110ad565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b606060006109f9610c3a565b9050806004018054610a0a90611aa0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3690611aa0565b8015610a835780601f10610a5857610100808354040283529160200191610a83565b820191906000526020600020905b815481529060010190602001808311610a6657829003601f168201915b505050505091505090565b600080610a99610c62565b9050610aa6818585610e02565b600191505092915050565b600080610abc610c3a565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b600080610b516110d5565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610b86610ef6565b6000610b906110d5565b9050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff16610bf46109b5565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b610c7783838360016110fd565b505050565b6000610c866112e3565b90506002816000015403610cc6576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d455760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d3c9190611a16565b60405180910390fd5b610d518260008361130b565b5050565b6000610d5f6112e3565b90506001816000018190555050565b6000610d7a8484610ab1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610dfc5781811015610dec578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610de393929190611b45565b60405180910390fd5b610dfb848484840360006110fd565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e745760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e6b9190611a16565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ee65760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610edd9190611a16565b60405180910390fd5b610ef183838361130b565b505050565b610efe610c62565b73ffffffffffffffffffffffffffffffffffffffff16610f1c6109b5565b73ffffffffffffffffffffffffffffffffffffffff1614610f7b57610f3f610c62565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f729190611a16565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fef5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610fe69190611a16565b60405180910390fd5b610ffb6000838361130b565b5050565b60006110096110d5565b90508060000160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561103b8261154a565b5050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61106f611621565b6110798282611661565b5050565b611085611621565b61108e8161169e565b50565b611099611621565b565b6110a3611621565b6110ab611724565b565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60007f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00905090565b6000611107610c3a565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361117b5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111729190611a16565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111ed5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111e49190611a16565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081156112dc578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516112d39190611962565b60405180910390a35b5050505050565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b6000611315610c3a565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361136b578181600201600082825461135f9190611bab565b92505081905550611444565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156113fa578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016113f193929190611b45565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361148f578181600201600082825403925050819055506114df565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161153c9190611962565b60405180910390a350505050565b60006115546110ad565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b611629611745565b61165f576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611669611621565b6000611673610c3a565b9050828160030190816116869190611db0565b50818160040190816116989190611db0565b50505050565b6116a6611621565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117185760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161170f9190611a16565b60405180910390fd5b61172181610fff565b50565b61172c611621565b60006117366112e3565b90506001816000018190555050565b600061174f61103f565b60000160089054906101000a900460ff16905090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561179f578082015181840152602081019050611784565b60008484015250505050565b6000601f19601f8301169050919050565b60006117c782611765565b6117d18185611770565b93506117e1818560208601611781565b6117ea816117ab565b840191505092915050565b6000602082019050818103600083015261180f81846117bc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118478261181c565b9050919050565b6118578161183c565b811461186257600080fd5b50565b6000813590506118748161184e565b92915050565b6000819050919050565b61188d8161187a565b811461189857600080fd5b50565b6000813590506118aa81611884565b92915050565b600080604083850312156118c7576118c6611817565b5b60006118d585828601611865565b92505060206118e68582860161189b565b9150509250929050565b60008115159050919050565b611905816118f0565b82525050565b600060208201905061192060008301846118fc565b92915050565b60006020828403121561193c5761193b611817565b5b600061194a84828501611865565b91505092915050565b61195c8161187a565b82525050565b60006020820190506119776000830184611953565b92915050565b60008060006060848603121561199657611995611817565b5b60006119a486828701611865565b93505060206119b586828701611865565b92505060406119c68682870161189b565b9150509250925092565b600060ff82169050919050565b6119e6816119d0565b82525050565b6000602082019050611a0160008301846119dd565b92915050565b611a108161183c565b82525050565b6000602082019050611a2b6000830184611a07565b92915050565b60008060408385031215611a4857611a47611817565b5b6000611a5685828601611865565b9250506020611a6785828601611865565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ab857607f821691505b602082108103611acb57611aca611a71565b5b50919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000611b14611b0f611b0a84611ad1565b611aef565b611adb565b9050919050565b611b2481611af9565b82525050565b6000602082019050611b3f6000830184611b1b565b92915050565b6000606082019050611b5a6000830186611a07565b611b676020830185611953565b611b746040830184611953565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bb68261187a565b9150611bc18361187a565b9250828201905080821115611bd957611bd8611b7c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611c707fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611c33565b611c7a8683611c33565b95508019841693508086168417925050509392505050565b6000611cad611ca8611ca38461187a565b611aef565b61187a565b9050919050565b6000819050919050565b611cc783611c92565b611cdb611cd382611cb4565b848454611c40565b825550505050565b600090565b611cf0611ce3565b611cfb818484611cbe565b505050565b5b81811015611d1f57611d14600082611ce8565b600181019050611d01565b5050565b601f821115611d6457611d3581611c0e565b611d3e84611c23565b81016020851015611d4d578190505b611d61611d5985611c23565b830182611d00565b50505b505050565b600082821c905092915050565b6000611d8760001984600802611d69565b1980831691505092915050565b6000611da08383611d76565b9150826002028217905092915050565b611db982611765565b67ffffffffffffffff811115611dd257611dd1611bdf565b5b611ddc8254611aa0565b611de7828285611d23565b600060209050601f831160018114611e1a5760008415611e08578287015190505b611e128582611d94565b865550611e7a565b601f198416611e2886611c0e565b60005b82811015611e5057848901518255600182019150602085019450602081019050611e2b565b86831015611e6d5784890151611e69601f891682611d76565b8355505b6001600288020188555050505b50505050505056fea26469706673582212204b4a5988d16488b0377dbdb14a70aba5e98c99afc58a5d83c735e710097bcad864736f6c634300081a0033";

type EnergyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnergyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Energy__factory extends ContractFactory {
  constructor(...args: EnergyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Energy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Energy__factory {
    return super.connect(runner) as Energy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnergyInterface {
    return new Interface(_abi) as EnergyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Energy {
    return new Contract(address, _abi, runner) as unknown as Energy;
  }
}
